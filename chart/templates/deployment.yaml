apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
        - name: my-app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          envFrom:
            {{- if .Values.envFromSecret }}
            {{- range .Values.envFromSecret }}
            - secretRef:
                name: {{ . }}
            {{- end }}
            {{- end }}
            {{- if .Values.envFromConfigmap }}
            {{- range .Values.envFromConfigmap }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- end }}
          env:
            # # Load values from Secret
            # - name: SECRET_KEY
            #   valueFrom:
            #   secretKeyRef:
            #     name: my-app-secret
            #     key: SECRET_KEY
            # - name: DB_PASSWORD
            #   valueFrom:
            #   secretKeyRef:
            #     name: my-app-secret
            #     key: DB_PASSWORD

            # # Load values from ConfigMap
            # - name: API_BASE_URL
            #   valueFrom:
            #   configMapKeyRef:
            #     name: my-app-config
            #     key: API_BASE_URL
            # - name: LOG_LEVEL
            #   valueFrom:
            #   configMapKeyRef:
            #     name: my-app-config
            #     key: LOG_LEVEL
            # - name: MAX_CONNECTIONS
            #   valueFrom:
            #   configMapKeyRef:
            #     name: my-app-config
            #     key: MAX_CONNECTIONS
            {{- if .Values.env }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
            {{- end }}
