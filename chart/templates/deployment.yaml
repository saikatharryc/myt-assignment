apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.annotations }}
    {{- range $key, $value := .Values.annotations }}
    {{ $key }}: {{ $value }}
    {{- end }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      # security considerations
      securityContext:
        runAsNonRoot: true
        fsGroup: 2000
        runAsUser: 1000

      tolerations:
        {{- if .Values.tolerations }}
        {{- range .Values.tolerations }}
        - key: {{ .key }}
          operator: {{ .operator }}
          value: {{ .value }}
          effect: {{ .effect }}
        {{- end }}
        {{- end }}
      
      containers:
        - name: main
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1

          # Resources block
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          
          envFrom:
            {{- if .Values.envFromSecret }}
            {{- range .Values.envFromSecret }}
            - secretRef:
                name: {{ . }}
            {{- end }}
            {{- end }}
            {{- if .Values.envFromConfigmap }}
            {{- range .Values.envFromConfigmap }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- end }}
          env:
            {{- if .Values.env }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
            {{- end }}
